<?xml version="1.0" encoding="utf-8"?>
<resources>
    
    
    <string-array name="time">
        <item>Seconds</item>
    </string-array>
    
    <string-array name="questions">
        <item>How do I enable torch (flashlight) mode?</item>
        <item>What is duty cycle?</item>
        <item>Why are the flashes inconsistent?</item>
        <item>How can I get the best performance?</item>
        <item>What is a good use for this app other than tripping out?</item>
        <item>Why does my phone click when I open this app?</item>
        <item>Just how fast is 0ms?</item>
        <item>Why would you block airplane mode in the ad version?</item>
        <item>What is the late flash rejection threshold?</item>
        <item>What is flash preempt?</item>
        <item>Should I rate this app?</item>
    </string-array>
    
    <string-array name="answers">
        <item>Long press on the \"Toggle Running\" button.</item>
        <item>Duty cycle is the proportion of time the light is on/off.
            Look at the little numbers beside the \"On\" and \"Off\" to
            understand.</item>
        <item>Everyone loves Android because it multi-tasks right? Well,
            that\'s actually the problem here. In multi-tasking, the cpu
            rapidly switches what it is doing hundreds of times per second
            so that all of your programs appear to be running at the same
            time. Normally, games can suffer a 50ms delay and you don\'t 
            notice because they do not have very strict timing restrictions,
            but when you start asking this app to give you a flash of
            5ms and the cpu decides it\'s time to switch tasks, you\'re 
            going to see inconsistent flashes. (That\'s why I included
            airplane mode)\n
            \nAlso, I\'ve recently discovered that the LED sometimes ignores
            what you tell it to do. Every update where I improve the consistency
            usually involves me messing around with the LED.</item>
        <item>The key here is to basically shut your phone down:\n
            \t1. Enable airplane mode outside this app\n
            \t2. Enable airplane mode inside this app with the checkbox\n
            \t3. Press the checkbox in the bottom right\n
            \t4. Adjust the flash rate with the volume keys\n
            \t5. Lock the phone once you found the right frequency</item>
        <item>If you flash a light at just the right frequency, you can 
            make moving objects appear to stand still.\n
    		\t1. Find a rotating object (fan, drill, cd, etc.)\n
    		\t2. Move it to a dark place\n
    		\t3. Change the duty cycle to around 5%-10%\n
    		\t4. Adjust the frequency until the object appears to stop.\n\n
    		For more on this, check out the Stroboscope settings.
            </item>
        <item> The flashlight can only be turned on when the camera is in
            \"preview\" mode. You are hearing/feeling the lense move into
            place.</item>
        <item>This is a setting you can get to by long-clicking the 
            \"Save ON Length\" button. Setting this to 0 essentially means
            that I will try to turn the LED off as fast as possible. The 
            actual minimum length that your phone can handle is going to
            vary greatly though. My phone (Droid X2) can pull off 0.5 ms every now
            and then, but some phones (Note 2) can\'t seem to get below
            5 ms.</item>
        <item>Well, ads are downloaded from the internet, so airplane
            mode is a clever way to block them.</item>
        <item>This is for when you need carefully timed flashes. If a flash
            is going to be late by this many milliseconds, it simply will
            be skipped.</item>
        <item>This is also for when you need carefully timed flashes. The idea
            here is that I can tell the CPU to wait X number of milliseconds. 
            Now, if I tell the CPU to wait the exact time I need, and the CPU
            waits too long, then the flash is going to be late. Instead, it is
            better to set the delay a little bit too short and then manually
            wait for the correct time. (If you set this number too high, the
            CPU might decide to switch to another process before the flash 
            occurs.)</item>
        <item>Yes</item>
    </string-array>
        
    
    <string-array name="q_and_a">
        <item>-General</item>
        <item>My LED doesn\'t work</item>
        <item>Try the settings at the top of the Settings page under \"Having LED issues?\". Some combination there will probably work.</item>
        <item>What does the red # Hz mean in the bottom right corner?</item>
        <item>This appears when you have set the frequency higher than what your phone can handle. The 
            displayed Hz is what the LED is actually flashing at.</item>
        <item>How can I fine tune the frequency?</item>
        <item>Use your volume keys while the app is flashing.</item>
        <item>How can I get the most performance from this app?</item>
        <item><![CDATA[The general strategy for increasing performance is to first configure the app to flash faster
            and then to put your phone into an inactive state.
            \n\n<b>Faster flashing</b>
            \n\n<b>1.</b> Enable diagnostic mode
            \nThe \"Theoretical max Hz\" (TMH) is the reason we need diagnostic mode. The higher you get this number,
            the faster the app can flash. (It\'s also a measure of general performance)
            \n\n<b>2.</b> Set \"Late flash rejection threshold\" to none
            \nSkipping flashes can lead to an artificially high TMH so disable it for now.
            \n\n<b>3.</b> Set the Strobe to your desired settings
            \nIt\'s important to optimize the app at your desired frequency and duty cycle. (If you\'re doing science,
            you probably want 0% duty).
            \n\n<b>4.</b> Experiment to find best settings
            \nTry to find the app settings that maximize the THM. All of the important settings are on the Advanced tab.
            Leave the \"Late flash rejection threshold\" on None and try to disable the \"Preview hack\" on the Settings
            tab if you have enabled it.
            \n\n<b>5.</b> Set the \"Late flash rejection threshold\"
            \nAfter adding diagnostic mode, I realized this settings isn\'t as useful as I thought. I\'d say anything between 
            0.150 ms and 0.250 ms is probably good.
            \n\n<b>Inactive state</b>
            \n\nNow that you\'ve found the best settings, you need to put your phone into an inactive state. The goal here to
            to make it so that the only thing your phone is doing is flashing the LED. Any interruptions (like receiving a text)
            will cause hiccups in the flashing.
            \n\n<b>1.</b> Enable \"Continue flashing on app close\"
            \nYou need this so that you can turn your phone screen off. This ensures the phone won\'t try to update the screen.
            \n\n<b>2.</b> Enable Airplane mode
            \nAirplane mode ensure that apps won\'t try to connect to the internet while your phone is flashing.
            \n\n<b>3.</b> Start flashing and turn your screen off
            \nThis should give you the highest performance possible from you phone. You may need to wait a few seconds for it
            to stabilize after you turn off your screen.]]>
 
            </item>
        <item>How can I find the RPM of a spinning object?</item>
        <item><![CDATA[The idea here is that if you flash your LED at the exact same rate that the object is spinning, the object
            will appear to stand perfectly still. You can then check what RPM you are flashing your LED at to find the
            RPM of the object.
            \n\n<b>1.</b> Follow the \"How can I get the most performance from this app?\" guide above
            \n\n<b>2.</b> Go to the Advanced tab and enable \"Use RPM\" and \"Show Diagnostic mode\".
            \n\n<b>3.</b> Go to the Strobe tab and set the Duty cycle to 0%.
            \n\n<b>4.</b> Set the app to a rough guess of the RPM and start flashing
            \n\n<b>5.</b> Go to the Diagnostic tab and make sure that the graph checks out (you should see vertical lines,
            diagonal lines mean you are flashing faster than your phone can handle)
            \n\n<b>6.</b> Turn off all the lights and point your phone at the spinning object
            \n\n<b>7.</b> Use the <b>volume keys</b> to adjust the flashing frequency until the object appears to stop
            \n\n The faster the object is spinning, the more performance you\'ll need from your phone. Your results may
            vary, but I\'d say if your pulse duration is above 20 ms, you won\'t accomplish much with the app.
            \n\n<b>8. Validation:</b> Enable \"Show x½ and x2\" on the settings tab and then go back to the Strobe tab.
            \n\nPressing x2 should flash twice per cycle. If you\'ve found the correct frequency, you should see the object
            in two positions that are 180° away from each other.
            \n\nPressing x½ should flash every other cycle. If you\'ve found the correct frequency, the object should
            look the same.]]></item>
        <item>-Advanced</item>
        <item>What is \"Use RPM\"?</item>
        <item>This will display frequency in units of Revolutions Per Minute instead of Hz. 
            \n\n(RPM = Hz * 60)</item>
        <item>What is \"Show x½ and x2\"?</item>
        <item>This adds buttons to double and half the frequency.\n\nIf you\'ve correctly found the frequency of something,
            pressing x2 should flash twice per cycle (a 3 blade fan will show 6 blades). You can use this to ensure
            that you have found the correct frequency.</item>
        <item>What is \"Show Diagnostic mode\"?</item>
        <item>This adds a new tab to the app that allows you to assess the current performance of the LED.</item>
        <item>What is \"Show real-time duty\"?</item>
        <item>This will add red numbers to the Strobe page that show the actual duty cycle achieved by the app.</item>
        <item>What is \"Use multi commands\"?</item>
        <item>Some phones don\'t listen when you tell them to turn off the LED. Enabling this will cause the app
            to repeatedly tell the phone to turn off the LED.</item>
        <item>What is \"Performance hack\"?</item>
        <item>This is a little hack I found that will always improve performance if it works, but rarely works. On some phones
            trying this option will temporarily \"break\" the camera. The only way to fix this is to restart your phone. </item>
        <item>What is \"Full cpu\"?</item>
        <item>This option forces the CPU into full power mode when you flash the LED. If you are flashing at a high frequency
            (above 10 Hz), your phone\'s cpu is probably already in full power mode. But if you are flashing at say 1Hz, this option
            will allow you to have a shorter flash duration.
            \n\nThe reason this works is because the camera driver runs in its own process at its own pace. If you force the CPU
            into high power mode, the camera driver will run faster.</item>
        <item>What is \"Late flash rejection threshold\"?</item>
        <item><![CDATA[This setting determines how late the app can be before it decides to skip a flash.
            \n\nThis setting isn\'t as useful as I once thought now that I know that the LED illuminates at the
            <b>end</b> of the call to illuminate the LED. Nonetheless, setting this to 0.250 seconds will
            ensure that <b>very</b> late flashes don\'t occur.]]></item>
        <item>What is \"Flash preempt?\"</item>
        <item>This setting determines how long the app will \"sleep\" between flashes. The idea here is that
            \"sleeping\" isn\'t precise so the app will cut the \"sleep\" short so that it doesn\'t start a flash late.
            This setting determines how early the \"sleep\" will be cut.
            \n\nLike the previous setting, I\'m not sure how useful this is. Nonetheless, playing with this setting does
            seem to affect the flashing consistency.</item>
        
        
        <item>-Settings</item>
		<item>What is \"Preview hack\"?</item>
		<item><![CDATA[First of all,
		    <b>the LED is part of the camera</b>. In order to turn on the LED, the app must first connect to the camera.
		    
		    \n\nTo understand the \"Preview hack\", you need to think about how a normal camera app works.
		    When a normal camera app opens, it shows you a <b>preview</b> of what you\'re about to take a picture of.
		    Once the preview has been started, you can press the flash icon to turn the LED on and off. 
		    
		    \n\nNow, this app is not a normal camera app. In order to maximize performance, the app <b>does not start
		    a preview</b> and instead just tries to turn the LED on and off. Some phones will not light the LED without 
		    starting a preview and the \"Preview hack\" enables the preview so that the app will work on these phones.
		    
		    \n\nCapturing the preview image and displaying it to the screen take time. This is why the preview hack decreases
		    performance. 
		    
		    \n\nFinally, you might be wondering where the preview is. Look in the bottom left corner of the app
		    near the \"Torch\" checkbox. The preview is only 1 pixel and can be identified by pointing your phone at 
		    something bright.]]></item>
		<item>What is \"Maximum frequency\"?</item>
		<item>This adjusts the range of the vertical slider on the Strobe tab. 
		    \n\nJust remember to look in the bottom right corner of the app to see what frequency your LED is actually
		    flashing at. It\'s highly unlikely that your phone can flash at 100 Hz. (Let me know if your phone works above
		    60 Hz. I\'d like to know what phones work really well.)</item>
		<item>What is \"Continue flashing on app close\"?</item>
		<item>With this enabled, Strobily won\'t stop flashing until you tell it to. This means you can 
		    turn off your phone or quit the app and it will keep flashing.
		    \n\n(This does\'t work with the screen flash for obvious reasons)</item>
		<item>What is \"Dim screen while flashing\"?</item>
		<item>This will lower the brightness of your screen when the app is flashing the LED.</item>
		<item>What is \"Show burst option\"?</item>
		<item>This will show a \"Burst\" button on the Strobe tab. Long-press the button to change the number
		    of flashes per burst.</item>
		<item>What is \"Show help buttons\"?</item>
		<item>This enables the \"?\" button on the Tacho tab.</item>
		<item>What is \"Screen flash color\"?</item>
		<item>This is the color your screen will be when it flashes.</item>
        <item>-Diagnostic</item>
        <item>What is Diagnostic mode?</item>
        <item>Diagnostic mode shows you what the app is doing in real-time. Check the legend to see what the colors
            mean.</item>
        <item>What is \"Show LED state\"?</item>
        <item>This gives an estimate of what the LED is doing. The app makes the assumption that the LED changes state
            when the function to turn the LED on/off returns. </item>
        <item>How can I interpret this graph?</item>
        <item><![CDATA[This is a simple description, if you need to get more from the graph then you can probably already interpret it.
            \n\nFirst, check \"Show LED state\". The x-axis (horizontal axis) is set to perfectly match the LED frequency. 
            This means that if the app is behaving properly, the white portions (when the LED is lit) should form a 
            vertical, white stripe. This would indicate that the LED turns on and turns off at exactly the same time for each
            flash.
            \n\nYour graph may not show a white stripe, here\'s what other patterns mean:
            \n\n<b>Jagged stripe</b>
            \nThis means that your phone is doing other things besides flashing the LED. Try following the 
            \"How can I get the most performance from this app?\" guide above or decreasing the graph \"Refresh\" rate.
            \n\n<b>Diagonal Stripe</b>
            \nThis means you have your frequency set higher than the phone can handle. The stripes are diagonal because
            the phone hasn\'t finished turning the LED off when it\'s time to turn the LED on again. The result
            is that the phone is flashing as fast as it can, but can\'t keep up with what you set.]]></item>
        <item>What is \"Pulse duration\"?</item>
        <item>Pulse duration is the estimated average duration that the LED was illuminated.
            \n\nTechnical: The pulse is defined from the end of yellow to the end of light purple. The number 
            is calculated from:
            \n\n(LED on time) / (number of flashes)</item>
        <item>What is \"Actual duty cycle\"?</item>
        <item>This is the estimated average duty cycle achieved by the app. 
            \n\nTechnical: This is calculated first by determining a representative Hz.
            The representative Hz is found by looking at the number of times the app flashed
            and dividing by the amount of time it needed to do so (skipped flashes are handled differently).
            
            \n\nOnce the representative Hz is found, the actual duty cycle is calculated by:
            \n\n (Pulse duration) * (Hz) * 100%
            
            \n\nThis method allows for accurate calculations when the app is heavily lagging while not being
            affected by skipped flashes.</item>
        <item>What is \"Actual Hz\"?</item>
        <item>This is the actual frequency that the app is flashing at.
            \n\nTechnical: This number is the representative Hz that was mentioned in the previous bullet. This number
            is found by looking at the number of flashes and skipped flashes that occur in a time period.
            \n\nSkipped flashes count as though the app actually flashed.</item>
        <item>What is \"Theoretical max Hz\"?</item>
        <item>This is the maximum frequency that you can set your phone at before it will start lagging.
            \n\nTechnical: This is found from the time it takes to turn the LED on and back off again. The actual
            data being used are the yellow, orange, and purple bars. The average duration per flash is found and 
            the max frequency is found from:
            \n\n 1 / (average on off time)</item>
        <item>-Strobe</item>
        <item>How do I adjust the frequency?</item>
        <item><![CDATA[There are 3 ways to adjust the frequency:
            \n\n<b>1. The vertical slider</b>
            \nOn the right side of the screen, there is a vertical slider. You can move this vertically with your finger
            to select the frequency in 1Hz units and then you can move to the left to set the decimal.
            \n\nPro tip: If you touch the screen with a second finger, the frequeny will lock. This is useful if
            you are trying to get 0.001 Hz accuracy.
            \n\n<b>2. Type it</b>
            \nIf you click on the displayed frequency, you will be able to type. If the app seems to ignore what you typed,
            try pressing <b>enter</b> after you type the number.
            \n\n<b>3. Use your volume keys</b>
            \nPressing your volume keys will adjust the frequency up or down by 0.05 Hz. This is useful if you are trying to
            match the frequency of a spinning object.]]></item>
        <item>What is duty cycle?</item>
        <item>Duty cycle is the fraction of time that the LED is illuminated. 25% means that 1/4 of the cycle the 
            LED is on and 3/4 of the cycle the LED is off.
            \n\nSetting the duty cycle to 0% tells the app to give the shortest possible pulse duration. 
            \n\nIf you enable \"Show real-time duty\" on the Advanced tab, the app will show you the duty cycle
            that it is actually producing.</item>
        <item>What is saved ON length?</item>
        <item>If you want to have a constant pulse duration while you adjust the frequency, this feature is for you.
            \n\nYou can type in your own frequeny if you click on the number.</item>
        <item>How do I start/stop flashing?</item>
        <item>Press the \"Toggle running\" button.</item>
        <item>How do I change the number of bursts?</item>
        <item>Long-click on the burst button. (Hold it for 0.5 sec)</item>
        <item>-Music</item>
        <item>How does this work?</item>
        <item>I\'m not going to go into the full details here, but the parameter of interest is sound intensity.
            \n\nThe app tries to auto-correlate the microphone sound intensity data using fourier transforms and then
            uses many filters to produce a stabilized frequency. 
            \n\nThis part of the app could definitely be improved, but another guy took my idea and made a better one
            so I\'m not going to try to compete.</item>
        <item>-Tacho</item>
        <item>How do I use this?</item>
        <item>I already added a help page to that tab so check that for information.</item>
        <item>How does this work?</item>
        <item>This works very similarly to the Music tab. The app tries to auto-correlate the microphone sound data
            and then look for resonant frequencies. After finding frequencies, it determines which are harmonics
            of each other and displays them to the page.</item>
        <item>-Pattern</item>
        <item>How can I make a simple 2 Hz flash?</item>
        <item><![CDATA[<b>1.</b> Make a new pattern that has only one \"Flash\" item. 
            \n<b>2.</b> Set it to flash at 2Hz and \"Flash 1 times\". 
            \n<b>3.</b> Press \"Run looped\" button]]></item>
        <item>How do I include one pattern in another?</item>
        <item><![CDATA[<b>1.</b> Save a pattern
            \n<b>2.</b> Make a new pattern
            \n<b>3.</b> Change one of the items to \"Pattern\" and then select your saved pattern
            \n\nThe ability to nest patterns makes this pattern generator very powerful. You can break complex patterns
            into smaller chunks so that you can edit them individually or you can use the saved patterns as a sort of 
            copy/paste.
            \n\nWhen you save a pattern that references other patterns, the app reads the patterns the moment you press
            go. This means that you must keep all of your subpatterns the same if you plan to keep the outer pattern.
            ]]></item>
        <item>Is there a limit to pattern depth?</item>
        <item>Nope. The pattern gets compiled when you press go. This means that if you have a rediculously complex pattern,
            it may lag at first, but once it starts flashing, the app will have no trouble.</item>
        <item>-Widget</item>
        <item>What is \"One line label\"?</item>
        <item>This attempts to make the label for your widget 1 line. If your label is too long, the homescreen will
            probably cut it to two lines regardless.
            \n\nTechnical: This replaces all spaces with non-breaking spaces.</item>
        <item>I\'m pretty sure these aren\'t widgets...</item>
        <item>You\'re right, they\'re actually shortcuts. Most people don\'t know the difference though so I call them 
            widgets.</item>
        <item>-Turntable</item>
        <item>I can\'t get a clear view of the pattern!</item>
        <item>The problem here is that you aren\'t getting the performance you need from your phone. The easist fix may
            be to try a slower flash speed. If that doesn\'t work, try the \"How can I get the most performance from 
            this app?\" guide at the top of this page. You\'ll need to get your pulse duration down to about 10ms for this to work.</item>
    </string-array>
    
    
</resources>